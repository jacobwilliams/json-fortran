language: python

python:
  - 2.7

sudo: false

cache:
  apt: true
  pip: true
  directories:
    - $HOME/.cache/pip
    - $HOME/.local

addons:
  apt:
    sources:
      - kalakris-cmake
      - ubuntu-toolchain-r-test
    packages:
      - gfortran-4.9
      - binutils
      - cmake
      - python-pip

# Build matrix: Run the three build systems and tests in parallel
env:
  global:
    - CHECK_README_PROGS="yes"
  matrix:
      # CMake build with unit tests, no documentation, with coverage analysis
      # No unicode so that coverage combined with the build script will cover unicode
      # and non-unicode code paths
    - >
      BUILD_SCRIPT="mkdir cmake-build &&
      cd cmake-build &&
      cmake -DCMAKE_BUILD_TYPE=COVERAGE .. &&
      make -j 4 check"
      CODE_COVERAGE="yes"

      # build with build.sh, make documentation, run unit tests and perform coverage analysis
    - BUILD_SCRIPT="./build.sh --coverage --enable-unicode"
      CODE_COVERAGE="yes"

install:
  - |
    if [[ ! -d "$HOME/.local/bin" ]]; then
      mkdir "$HOME/.local/bin"
    fi
  - export PATH="$HOME/.local/bin:$PATH"
  - export FC=/usr/bin/gfortran-4.9
  - ln -fs /usr/bin/gfortran-4.9 "$HOME/.local/bin/gfortran" && gfortran --version
  - ls -l /usr/bin/gfortran-4.9
  - ln -fs /usr/bin/gcov-4.9 "$HOME/.local/bin/gcov" && gcov --version
  - |
    if ! which f90split; then
      wget http://people.sc.fsu.edu/~jburkardt/f_src/f90split/f90split.f90 && \
      gfortran -o f90split f90split.f90 && \
      mv f90split "$HOME/.local/bin/" && \
      rm f90split.f90
    fi
  - pip show pygooglechart || pip install pygooglechart
  - pip show FoBiS.py || (pip install FoBiS.py && FoBiS.py --version)
  - pip show ford || (pip install ford && ford --version)
  - pip show jsonlint || (pip install git+https://github.com/dmeranda/demjson.git && jsonlint --version)

before_script:
  - |
    if [[ $CHECK_README_PROGS == [yY]* ]]; then
      f90split README.md && \
      for f in example*.md; do
        mv $f src/tests/jf_test_${f%.md}.f90
      done
    fi

script:
  - echo $BUILD_SCRIPT
  - bash <<<$BUILD_SCRIPT

after_success:
  - cd $TRAVIS_BUILD_DIR
  - |
    if [[ $CODE_COVERAGE == [yY]* ]]; then
      bash <(curl -s https://codecov.io/bash)
    fi
  - git config --global user.name "TRAVIS-CI-for-$(git --no-pager show -s --format='%cn' $TRAVIS_COMMIT)"
  - git config --global user.email "$(git --no-pager show -s --format='%ce' $TRAVIS_COMMIT)"
#broken for now#  - ./deploy.sh #handles updating documentation for master branch as well as tags
